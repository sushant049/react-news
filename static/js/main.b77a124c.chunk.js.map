{"version":3,"sources":["redux/actions/actionTypes.js","services/externalServices.js","redux/actions/action.js","containers/header.js","components/newsStats.js","components/newsCard.js","containers/mainNewsList.js","components/newsPreviewCard.js","containers/topHeadlines.js","pages/home.js","containers/newsDetailsContainer.js","containers/similarNews.js","pages/newsDetails.js","containers/pageContent.js","containers/app.js","redux/reducers/news.js","redux/reducers/rootReducer.js","index.js"],"names":["news","ExternalService","this","apiDomain","process","apiKey","_dataRequest","method","sources","map","data","id","name","country","sourceID","articles","headlines","description","fetchKeywords","keywords","title","details","formBody","Object","keys","key","encodeURIComponent","join","fetch","result","_checkStatus","json","_handleError","path","options","headers","body","JSON","stringify","err","response","Promise","reject","message","statusText","status","error","Error","fetchNews","dispatch","a","getNewsBySource","type","actionType","payload","fetchTopHeadlines","getTopHeadlines","Header","Layout","AppHeader","reloadAllNews","sourceName","updateSelectedSource","props","componentDidMount","loadSources","allSources","className","mode","defaultSelectedKeys","Item","onClick","length","index","Component","connect","getNewsSources","selectedSource","Text","Typography","NewsStats","date","DateArray","Date","toString","split","newsSource","newsDate","gutter","lg","renderDate","StarOutlined","LikeOutlined","Title","Paragraph","NewsCard","history","push","newsData","pageRedirection","encodeURI","src","urlToImage","alt","level","substring","source","publishedAt","withRouter","shortid","require","MainNewsList","fetchMoreData","newsList","state","currentIndex","finalOffset","offset","i","setState","prevState","concat","console","log","dataLength","next","hasMore","loader","endMessage","style","textAlign","d","generate","NewsPreviewCard","window","location","reload","TopHeadlines","slice","Home","loadNews","loadTopHeadlines","topHeadlines","color","NewsDetailContainer","separator","href","content","RelatedNews","NewsDetails","getCurrentURL","decodeURIComponent","pathname","replace","loadSelectedNews","loadRelatedNews","selectedNews","relatedNews","getState","filter","news_from_headlines","related_news","fetchSelectedNews","getRelatedNews","PageContent","exact","component","App","InitialState","rootReducer","combineReducers","middleware","thunk","composeEnhancers","compose","store","createStore","persistState","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"iSAAaA,EAES,oBAFTA,EAGW,sBAHXA,EAIU,qBAJVA,EAKa,yBALbA,EAMK,gBANLA,EAOW,sB,QCuKTC,EADS,I,WA5KtB,aAAe,oBACbC,KAAKC,UAAaC,yBAClBF,KAAKG,OAAUD,mC,+LAQLF,KAAKI,aAAL,qCAAgDJ,KAAKG,QAAU,CACvEE,OAAQ,Q,uBAFRC,E,EAAAA,Q,kBAKKA,EAAQC,KAAI,SAACC,GAClB,MAAO,CACLC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,QAASH,EAAKG,a,qLAKEC,G,kFAChBd,EAAO,KAEM,QAAbc,E,gCAGQZ,KAAKI,aAAL,6BAAwCQ,EAAxC,sCAA8EZ,KAAKG,QAAU,CACrGE,OAAQ,Q,gBAFRQ,E,EAAAA,SAKFf,EAAOe,E,wCAIGb,KAAKI,aAAL,uDAAkEJ,KAAKG,QAAU,CACzFE,OAAQ,Q,iBAFRQ,E,EAAAA,SAKFf,EAAOe,E,iCAGFf,G,uLAGac,G,kFAChBE,EAAY,KAEC,QAAbF,E,gCAGQZ,KAAKI,aAAL,kDAA6DQ,EAA7D,mBAAgFZ,KAAKG,QAAU,CACvGE,OAAQ,Q,gBAFRQ,E,EAAAA,SAKFC,EAAYD,E,wCAIFb,KAAKI,aAAL,4DAAuEJ,KAAKG,QAAU,CAC9FE,OAAQ,Q,iBAFRQ,E,EAAAA,SAKFC,EAAYD,E,iCAGPC,G,sLAIYC,G,6FACIf,KAAKgB,cAAcD,G,uBAArCE,E,EAAAA,S,SAIKjB,KAAKI,aAAL,uBAAkCa,EAAS,GAA3C,kDAAuFjB,KAAKG,QAAU,CAC9GE,OAAQ,Q,uBAFRQ,E,EAAAA,S,kBAKKA,G,qLAGYK,G,yFAGTlB,KAAKI,aAAL,8BAAyCc,EAAzC,mBAAyDlB,KAAKG,QAAU,CAChFE,OAAQ,Q,uBAFRQ,E,EAAAA,S,kBAKKA,G,oLAGWE,G,kFAEdI,EAAU,CACZ,KAAO,GAAP,OAAWJ,GACX,QAAW,KAGPK,EAAWC,OAAOC,KAAKH,GAASZ,KAAI,SAAAgB,GAAG,OAAIC,mBAAmBD,GAAO,IAAMC,mBAAmBL,EAAQI,OAAOE,KAAK,K,SAErGC,MAAM,mFAAoF,CACzG,OAAU,OACV,QAAW,CACT,kBAAmB,oDACnB,iBAAkB,qDAClB,eAAgB,qCAElB,KAAQN,I,cAPRO,E,gBAWA3B,KAAK4B,aAAaD,G,kBACXA,EAAOE,Q,mDAED7B,KAAK8B,aAAL,M,sOAKAC,EAAMC,G,gFAEjBC,EAAU,CACd,eAAgB,mBAChB,OAAU,MACV,8BAA+B,yBAGL,kBAAjBD,EAAQE,OAAmBF,EAAQE,KAAOC,KAAKC,UAAUJ,EAAQE,O,SAEvDR,MAAM,GAAD,OAAI1B,KAAKC,WAAT,OAAqB8B,GAArB,aACxBE,WACGD,I,cAFCL,E,gBAMJ3B,KAAK4B,aAAaD,G,kBACXA,EAAOE,Q,mDAED7B,KAAK8B,aAAL,M,wOAIEO,G,6EAEXA,EAAIC,S,wBAENA,EACED,EADFC,S,SAEiBA,EAAST,O,YAAtBA,E,iDAEWU,QAAQC,OAAOX,EAAKY,U,gCACzBF,QAAQC,OAAOF,EAASI,a,iCAG/BH,QAAQC,OAAOH,I,sIAGXC,GAEX,GAAIA,EAASK,QAAU,KAAOL,EAASK,OAAS,IAC9C,OAAOL,EAEP,IAAMM,EAAQ,IAAIC,MAAMP,EAASI,YAEjC,MADAE,EAAMN,SAAWA,EACXM,M,MCnKCE,EAAY,SAAClC,GAAD,8CAAc,WAAOmC,GAAP,eAAAC,EAAA,sEAClBjD,EAAgBkD,gBAAgBrC,GADd,OAC/Bd,EAD+B,OAGrCiD,EAAS,CACPG,KAAMC,EACNC,QAAStD,IAL0B,2CAAd,uDASZuD,EAAoB,SAACzC,GAAD,8CAAc,WAAOmC,GAAP,eAAAC,EAAA,sEAC1BjD,EAAgBuD,gBAAgB1C,GADN,OACvCd,EADuC,OAG7CiD,EAAS,CACPG,KAAMC,EACNC,QAAStD,IALkC,2CAAd,uD,iBCTzByD,EAAWC,IAAXD,OAEFE,E,4MACJC,cAAgB,SAAC9C,EAAU+C,IAEzBC,EAD+B,EAAKC,MAA9BD,sBACehD,EAAU+C,I,EAGjCG,kBAAoB,YAElBC,EADsB,EAAKF,MAArBE,gB,uDAIE,IAAD,OACDC,EAAehE,KAAK6D,MAApBG,WACN,OACE,kBAAC,IAAD,CAAQC,UAAU,iBAChB,kBAACV,EAAD,CAAQU,UAAU,cAChB,kBAAC,IAAD,CAAMC,KAAK,aAAaC,oBAAqB,CAAC,OAC5C,kBAAC,IAAKC,KAAN,CAAW7C,IAAI,KAAK8C,QAAS,kBAAI,EAAKX,cAAc,MAAO,cAA3D,YAEEM,EAAWM,OAASN,EAAWzD,KAAI,SAACC,EAAM+D,GAAP,OACjC,kBAAC,IAAKH,KAAN,CAAW7C,IAAKgD,EAAOF,QAAS,kBAAI,EAAKX,cAAclD,EAAKC,GAAID,EAAKE,QAAQF,EAAKE,SACjF,Y,GArBO8D,aAuCTC,eATS,SAAC,GAAD,MAAa,CACnCT,WADsB,EAAElE,KACPkE,eAGQ,SAAAjB,GAAQ,MAAK,CACtCgB,YAAa,kBAAMhB,EDnBO,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEACVjD,EAAgB2E,iBADN,OAC1BpE,EAD0B,OAGhCyC,EAAS,CACPG,KAAMC,EACNC,QAAS9C,IALqB,2CAAN,wDCoB1BsD,qBAAsB,SAAChD,EAAU+C,GAAX,OAA0BZ,EDFpB,SAACnC,EAAU+C,GAAX,8CAA0B,WAAOZ,GAAP,SAAAC,EAAA,6DAEtDD,EAAS,CACPG,KAAMC,EACNC,QAAS,CACP3C,GAAIG,EACJF,KAAMiD,KAN4C,SAUhDZ,EAASD,EAAUlC,IAV6B,uBAWhDmC,EAASM,EAAkBzC,IAXqB,2CAA1B,sDCE6B+D,CAAe/D,EAAU+C,QAGrEc,CAA6ChB,G,mDC1CpDmB,EAASC,IAATD,KA2BOE,E,yKAxBFC,GACT,IAAIC,EAAa,IAAIC,KAAKF,GAAOG,WAAWC,MAAM,KAClD,MAAM,GAAN,OAAUH,EAAU,GAApB,YAA0BA,EAAU,GAApC,aAA2CA,EAAU,GAArD,YAA2DA,EAAU,M,+BAE7D,IAAD,EACwBhF,KAAK6D,MAA9BuB,EADC,EACDA,WAAYC,EADX,EACWA,SAClB,OACI,kBAAC,IAAD,CAAKC,OAAQ,GAAIrB,UAAU,eACzB,kBAAC,IAAD,CAAKsB,GAAI,IACP,kBAAC,IAAD,KACE,kBAACX,EAAD,KACGQ,EAAW1E,KADd,KACqB,0BAAMuD,UAAU,cAAcjE,KAAKwF,WAAWH,OAIvE,kBAAC,IAAD,CAAKE,GAAI,GAAItB,UAAU,cACrB,8BAAM,kBAACwB,EAAA,EAAD,MAAN,QACA,8BAAM,kBAACC,EAAA,EAAD,MAAN,a,GAlBYlB,a,SCDhBmB,EAAqBd,IAArBc,MAAOC,EAAcf,IAAde,UAETC,E,8KACY9D,GACM/B,KAAK6D,MAAjBiC,QACAC,KAAKhE,K,+BAGL,IAAD,OACDiE,EAAahG,KAAK6D,MAAlBmC,SACN,OACE,oCACE,kBAAC,IAAD,CAAM/B,UAAU,YAAYI,QAAS,kBAAI,EAAK4B,gBAAL,wBAAsCC,UAAUF,EAAS9E,WAChG,kBAAC,IAAD,CAAKoE,OAAQ,GAAIrB,UAAU,gBACzB,kBAAC,IAAD,CAAKsB,GAAI,EAAGtB,UAAU,cACpB,yBAAKkC,IAAKH,EAASI,WAAYC,IAAKL,EAASI,cAE/C,kBAAC,IAAD,CAAKb,GAAI,GAAItB,UAAU,aACrB,kBAAC,IAAD,KACE,kBAAC0B,EAAD,CAAOW,MAAO,EAAGrC,UAAU,cACxB+B,EAAS9E,OAEZ,kBAAC0E,EAAD,CAAW3B,UAAU,kBAClB+B,EAASjF,YAAYwF,UAAU,EAAE,QAK1C,kBAAC,EAAD,CAAWnB,WAAYY,EAASQ,OAAQnB,SAAUW,EAASS,oB,GA1B9CjC,aAiCRkC,cAAWb,G,SCrCtBc,EAAUC,EAAQ,KAuEPC,E,kDApEb,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IAQRiD,cAAgB,WAMd,IANqB,IACfC,EAAa,EAAKlD,MAAlBkD,SADc,EAGW,EAAKC,MAA9BC,EAHc,EAGdA,aACFC,EAAcD,EAJE,EAGAE,OAHA,WAMZC,GACN,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1B9G,KAAM8G,EAAU9G,KAAK+G,OAAO,CAACR,EAASK,KACtCH,aAAeG,EAAE,OAHbA,EAAEH,EAAcG,EAAEF,EAAaE,IAAM,EAArCA,GAORI,QAAQC,IAAI,EAAKT,MAAMC,eApBvB,EAAKD,MAAQ,CACXxG,KAAM,GACNyG,aAAe,EACfE,OAAQ,IALO,E,gEA0BjBnH,KAAK8G,kB,+BAGG,IAAD,EACsB9G,KAAKgH,MAA5BxG,EADC,EACDA,KAAMyG,EADL,EACKA,aACZ,OACE,oCACA,kBAAC,IAAD,CACAS,WAAY1H,KAAK6D,MAAMkD,SAASzC,OAChCqD,KAAM3H,KAAK8G,cACXc,QAASX,EAAejH,KAAK6D,MAAMkD,SAASzC,OAC5CuD,OAAQ,0CACRC,WACE,uBAAGC,MAAO,CAACC,UAAW,WACpB,mDAKFxH,EAAK8D,OAAQ9D,EAAKD,KAAI,SAAC0H,EAAG1D,GAAJ,OACpB,kBAAC,EAAD,CAAUyB,SAAUiC,EAAG1G,IAAKoF,EAAQuB,gBAEpC,oCACA,yD,GAlDiB1D,aCAnBI,EAASC,IAATD,KAEFuD,E,8KAEYpG,GACM/B,KAAK6D,MAAjBiC,QACAC,KAAKhE,GACbqG,OAAOC,SAASC,W,+BAIR,IAAD,OACDtC,EAAahG,KAAK6D,MAAlBmC,SACN,OACE,oCACE,kBAAC,IAAD,CAAM/B,UAAU,YAAYI,QAAS,kBAAI,EAAK4B,gBAAL,wBAAsCC,UAAUF,EAAS9E,WAChG,kBAAC,IAAD,CAAKoE,OAAQ,GAAIrB,UAAU,gBACzB,kBAAC,IAAD,CAAKsB,GAAI,EAAGtB,UAAU,cACpB,yBAAKkC,IAAKH,EAASI,WAAYC,IAAKL,EAASI,cAE/C,kBAAC,IAAD,CAAKb,GAAI,GAAItB,UAAU,aACrB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAMA,UAAU,8BACb+B,EAAS9E,UAKlB,kBAAC,EAAD,CAAWkE,WAAYY,EAASQ,OAAQnB,SAAUW,EAASS,oB,GA1BvCjC,aAiCfkC,cAAWyB,GClBXI,E,uKAlBH,IACFxB,EAAa/G,KAAK6D,MAAlBkD,SACN,OACE,oCAEEA,EAASzC,OAAQyC,EAASyB,MAAM,EAAE,IAAIjI,KAAI,SAACC,EAAM+D,GAAP,OACxC,kBAAC,EAAD,CAAiByB,SAAUxF,EAAMe,IAAKgD,OAEtC,8E,GATiBC,a,SCGnBI,EAASC,IAATD,KAEF6D,E,kLACiB,IAAD,EAC0CzI,KAAK6D,MAAzD6E,EADU,EACVA,SAA0BjI,EADhB,EACAkE,eAAgBlE,GAAKkI,EADrB,EACqBA,iBACvCD,EAASjI,GACTkI,EAAiBlI,K,+BAGT,IAAD,EAC6CT,KAAK6D,MAAnD/D,EADC,EACDA,KAAM8I,EADL,EACKA,aAA8BlI,EADnC,EACmBiE,eAAgBjE,KAC1C,OACE,yBAAKuD,UAAU,kBACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKsB,GAAI,GAAItB,UAAU,gBACrB,kBAAC,IAAD,CAAYA,UAAU,sBACpB,kBAAC,EAAD,CAAMA,UAAU,uBACd,oDAAyB,0BAAMA,UAAU,eAAevD,IACxD,yBAAKuD,UAAU,eACb,kBAAC,IAAD,CAAK4E,MAAM,cAAX,YACA,kBAAC,IAAD,CAAKA,MAAM,cAAX,aACA,kBAAC,IAAD,CAAKA,MAAM,cAAX,UACA,kBAAC,IAAD,CAAKA,MAAM,cAAX,WACA,kBAAC,IAAD,CAAKA,MAAM,cAAX,iBACA,kBAAC,IAAD,CAAKA,MAAM,cAAX,aAIN,kBAAC,EAAD,CAAc9B,SAAUjH,KAG1B,kBAAC,IAAD,CAAKyF,GAAI,EAAGtB,UAAU,YACpB,kBAAC,IAAD,CAAYA,UAAU,sBACpB,kBAAC,EAAD,CAAMA,UAAU,eAAhB,kBAIF,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAc8C,SAAU6B,Y,GArCnBpE,aA4DJC,gBAdS,SAAC,GAAD,IAAE3E,EAAF,EAAEA,KAAF,MAAa,CACjCA,KAAMA,EAAKA,KACX8I,aAAc9I,EAAK8I,aACnBjE,eAAgB,CACdlE,GAAIX,EAAK6E,eAAelE,GACxBC,KAAMZ,EAAK6E,eAAejE,UAIL,SAAAqC,GAAQ,MAAK,CACtC2F,SAAU,SAAClC,GAAD,OAAYzD,EAASD,EAAU0D,KACzCmC,iBAAkB,SAACnC,GAAD,OAAYzD,EAASM,EAAkBmD,QAG5C/B,CAA6CgE,G,UChEpD9C,GAAqBd,IAArBc,MAAOC,GAAcf,IAAde,UAmDAkD,G,uKAhDH,IACF9C,EAAahG,KAAK6D,MAAlBmC,SACN,OACE,oCAEIA,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKT,GAAI,GAAItB,UAAU,sBACrB,kBAAC,KAAD,CAAY8E,UAAU,KACpB,kBAAC,KAAW3E,KAAZ,CAAiB4E,KAAK,KAAtB,QACA,kBAAC,KAAW5E,KAAZ,KAAkB4B,EAAS9E,MAAMqF,UAAU,EAAE,IAA7C,SAGJ,kBAAC,IAAD,CAAKhB,GAAI,GAAItB,UAAU,2BACrB,yBAAKkC,IAAKH,EAASI,WAAYC,IAAKL,EAASI,cAE/C,kBAAC,IAAD,CAAKb,GAAI,IACP,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAOe,MAAO,EAAGrC,UAAU,cACxB+B,EAAS9E,QAGhB,kBAAC,EAAD,CAAWkE,WAAYY,EAASQ,OAAQnB,SAAUW,EAASS,eAE7D,kBAAC,IAAD,CAAKlB,GAAI,IACP,kBAAC,IAAD,KACI,kBAAC,GAAD,KACGS,EAASiD,YAMpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1D,GAAI,GAAItB,UAAU,2BACrB,gF,GApCkBO,aCgBnB0E,G,uKAlBH,IACFnC,EAAa/G,KAAK6D,MAAlBkD,SACN,OACE,oCAEEA,EAASzC,OAAQyC,EAASyB,MAAM,EAAE,IAAIjI,KAAI,SAACC,EAAM+D,GAAP,OACxC,kBAAC,EAAD,CAAiByB,SAAUxF,EAAMe,IAAKgD,OAEtC,8E,GATgBC,aCIlBI,GAAUC,IAAVD,KAEFuE,G,4MAEJC,cAAgB,WAEd,OADgBC,mBAAmBjB,OAAOC,SAASiB,UAAUC,QAAQ,iBAAiB,K,kEAKtF/B,QAAQC,IAAIzH,KAAK6D,OADA,MAE6B7D,KAAK6D,MAA3C2F,EAFS,EAETA,iBAAkBC,EAFT,EAESA,gBAC1BD,EAAiBxJ,KAAKoJ,iBACtBK,M,+BAGQ,IAAD,EAC6BzJ,KAAK6D,MAAnC6F,EADC,EACDA,aAAcC,EADb,EACaA,YACpB,OACE,yBAAK1F,UAAU,kBACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKsB,GAAI,GAAItB,UAAU,gBACrB,kBAAC,GAAD,CAAqB+B,SAAU0D,EAAa,MAG9C,kBAAC,IAAD,CAAKnE,GAAI,EAAGtB,UAAU,YACpB,kBAAC,IAAD,CAAYA,UAAU,sBACpB,kBAAC,GAAD,CAAMA,UAAU,eAAhB,iBAIF,yBAAKA,UAAU,cACb,kBAAC,GAAD,CAAa8C,SAAU4C,Y,GA/BXnF,aAmDXC,gBAXS,SAAC,GAAD,IAAE3E,EAAF,EAAEA,KAAF,MAAa,CACjC6E,eAAgB7E,EAAK6E,eACrB+E,aAAc5J,EAAK4J,aACnBC,YAAa7J,EAAK6J,gBAGK,SAAA5G,GAAQ,MAAK,CACtCyG,iBAAkB,SAACtI,GAAD,OAAW6B,EVDE,SAAC7B,GAAD,8CAAW,WAAO6B,EAAU6G,GAAjB,mBAAA5G,EAAA,sDAGtClD,EAAO8J,IAAW9J,KAAKA,KAAK+J,QAAO,SAACrJ,GACtC,OAAOA,EAAKU,QAAUA,KAGpB4I,EAAsBF,IAAW9J,KAAK8I,aAAaiB,QAAO,SAACrJ,GAC7D,OAAOA,EAAKU,QAAUA,KAGpB6I,EAAeH,IAAW9J,KAAK6J,YAAYE,QAAO,SAACrJ,GACrD,OAAOA,EAAKU,QAAUA,KAGxB6B,EAAS,CACPG,KAAMC,EACNC,QAAStD,EAAKwE,OAASxE,EAAQgK,EAAoBxF,OAASwF,EAAsBC,IAjB1C,2CAAX,wDUCOC,CAAkB9I,KACxDuI,gBAAiB,kBAAM1G,EVzBO,uCAAM,WAAOA,EAAU6G,GAAjB,eAAA5G,EAAA,sEACjBjD,EAAgBkK,eAAeL,IAAW9J,KAAK4J,aAAa,GAAGT,SAD9C,OAC9BnJ,EAD8B,OAGpCiD,EAAS,CACPG,KAAMC,EACNC,QAAStD,IALyB,2CAAN,6DU4BjB2E,CAA6C0E,ICvDvCe,G,uKAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnI,KAAK,IAAIoI,OAAK,EAACC,UAAW3B,KACjC,kBAAC,IAAD,CAAO1G,KAAK,QAAQqI,UAAW3B,KAC/B,kBAAC,IAAD,CAAO1G,KAAK,2BAA2BqI,UAAWjB,U,GANjB3E,aCa1B6F,G,uKAXX,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,Y,GANQ7F,a,SCHZ8F,GAAe,CACnBtG,WAAY,GACZW,eAAgB,CACdlE,GAAI,MACJC,KAAM,YAERZ,KAAM,GACN4J,aAAe,GACfd,aAAc,GACde,YAAa,ICJAY,GAJKC,aAAgB,CAClC1K,KDUa,WAA4C,IAA3CkH,EAA0C,uDAAlCsD,GAAkC,yCAAnBpH,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,QAG3C,OAAQF,GACN,KAAKC,EACH,OAAO,2BACF6D,GADL,IAEElH,KAAMsD,IAIV,KAAKD,EACH,OAAO,2BACF6D,GADL,IAEE4B,aAAcxF,IAGlB,KAAKD,EACH,OAAO,2BACF6D,GADL,IAEE2C,YAAavG,IAGjB,KAAKD,EACH,OAAO,2BACF6D,GADL,IAEE0C,aAActG,IAIlB,KAAKD,EACH,OAAO,2BACF6D,GADL,IAEEhD,WAAYZ,IAIhB,KAAKD,EACH,OAAO,2BACF6D,GADL,IAEErC,eAAgB,CACdlE,GAAI2C,EAAQ3C,GACZC,KAAM0C,EAAQ1C,QAKpB,QACE,OAAOsG,M,+BEpDPyD,GAAa,CACjBC,MAGIC,GAGEC,KAEFC,GAAQC,aAAYP,GAAaI,GACrCI,KAAa,CAAC,SACdC,KAAe,WAAf,EAAmBP,MAErBQ,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,IAAO,kBAAC,GAAD,OAAoBM,SAASC,eAAe,W","file":"static/js/main.b77a124c.chunk.js","sourcesContent":["export const news = {\r\n  FETCH_ALL_NEWS : 'FETCH_ALL_NEWS',\r\n  FETCH_NEWS_BY_SID : 'FETCH_NEWS_BY_SID',\r\n  FETCH_TOP_HEADLINES : 'FETCH_TOP_HEADLINES',\r\n  FETCH_RELATED_NEWS : 'FETCH_RELATED_NEWS',\r\n  UPDATE_SELECTED_SOURCE: 'UPDATE_SELECTED_SOURCE',\r\n  FETCH_SOURCES : 'FETCH_SOURCES',\r\n  FETCH_SELECTED_NEWS : 'FETCH_SELECTED_NEWS'\r\n}","class _ExternalService {\r\n  constructor() {\r\n    this.apiDomain = (process.env.REACT_APP_API_BASE || '');\r\n    this.apiKey = (process.env.REACT_APP_API_KEY || '');\r\n  }\r\n\r\n  // const apiDomain = 'http://newsapi.org/v2/';\r\n\r\n  async getNewsSources() {\r\n    const {\r\n      sources\r\n    } = await this._dataRequest(`sources?language=en&apiKey=${this.apiKey}`, {\r\n      method: 'GET'\r\n    });\r\n\r\n    return sources.map((data)=>{\r\n      return {\r\n        id: data.id,\r\n        name: data.name,\r\n        country: data.country\r\n      }\r\n    });\r\n  }\r\n\r\n  async getNewsBySource(sourceID) {\r\n    let news = null;\r\n\r\n    if (sourceID !== \"all\") {\r\n      const {\r\n        articles\r\n      } = await this._dataRequest(`everything?sources=${sourceID}&sortBy=publishedAt&apiKey=${this.apiKey}`, {\r\n        method: 'GET'\r\n      });\r\n\r\n      news = articles;\r\n    } else {\r\n      const {\r\n        articles\r\n      } = await this._dataRequest(`everything?q=india&sortBy=publishedAt&apiKey=${this.apiKey}`, {\r\n        method: 'GET'\r\n      });\r\n\r\n      news = articles;\r\n    }\r\n\r\n    return news;\r\n  }\r\n\r\n  async getTopHeadlines(sourceID) {\r\n    let headlines = null;\r\n\r\n    if (sourceID !== \"all\") {\r\n      const {\r\n        articles\r\n      } = await this._dataRequest(`top-headlines?sortBy=popularity&sources=${sourceID}&apiKey=${this.apiKey}`, {\r\n        method: 'GET'\r\n      });\r\n\r\n      headlines = articles;\r\n    } else {\r\n      const {\r\n        articles\r\n      } = await this._dataRequest(`top-headlines?country=in&sortBy=popularity&apiKey=${this.apiKey}`, {\r\n        method: 'GET'\r\n      });\r\n\r\n      headlines = articles;\r\n    }\r\n\r\n    return headlines;\r\n\r\n  }\r\n\r\n  async getRelatedNews(description) {\r\n    let {keywords} = await this.fetchKeywords(description);\r\n    // console.log(keywords);\r\n    const {\r\n      articles\r\n    } = await this._dataRequest(`everything?q=${keywords[0]}&sortBy=publishedAt&language=en&apiKey=${this.apiKey}`, {\r\n      method: 'GET'\r\n    });\r\n\r\n    return articles;\r\n  }\r\n\r\n  async getNewsDetails(title) {\r\n    const {\r\n      articles\r\n    } = await this._dataRequest(`everything?qInTitle=${title}&apiKey=${this.apiKey}`, {\r\n      method: 'GET'\r\n    });\r\n\r\n    return articles;\r\n  }\r\n\r\n  async fetchKeywords(description) {\r\n\r\n    let details = {\r\n      \"text\": `${description}`,\r\n      \"wordnum\": \"5\"\r\n    }\r\n    \r\n    const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n    let result = await fetch(\"https://textanalysis-keyword-extraction-v1.p.rapidapi.com/keyword-extractor-text\", {\r\n        \"method\": \"POST\",\r\n        \"headers\": {\r\n          \"x-rapidapi-host\": \"textanalysis-keyword-extraction-v1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": \"f0653ad88dmsh232340d1a7fd82ap1c942bjsn4eb9b756d1dc\",\r\n          \"content-type\": \"application/x-www-form-urlencoded\"\r\n        },\r\n        \"body\": formBody\r\n      });\r\n\r\n      try {\r\n        this._checkStatus(result);\r\n        return result.json();\r\n      } catch (err) {\r\n        return await this._handleError(err);\r\n      }\r\n      \r\n  }\r\n\r\n  async _dataRequest(path, options) {\r\n    // performs api calls sending the required authentication headers\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': '*/*',\r\n      'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n    }\r\n\r\n    if (typeof options.body === 'object') options.body = JSON.stringify(options.body);\r\n\r\n    const result = await fetch(`${this.apiDomain}${path}`, {\r\n      headers,\r\n      ...options\r\n    });\r\n\r\n    try {\r\n      this._checkStatus(result);\r\n      return result.json();\r\n    } catch (err) {\r\n      return await this._handleError(err);\r\n    }\r\n  }\r\n\r\n  async _handleError(err) {\r\n    // Extracts and returns a rejected promise, with the error message (if any)\r\n    if (!!err.response) {\r\n      const {\r\n        response\r\n      } = err;\r\n      const json = await response.json();\r\n\r\n      if (json) return Promise.reject(json.message);\r\n      else return Promise.reject(response.statusText);\r\n    }\r\n\r\n    return Promise.reject(err);\r\n  }\r\n\r\n  _checkStatus(response) {\r\n    // raises an error in case response status is not a success\r\n    if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\r\n      return response\r\n    } else {\r\n      const error = new Error(response.statusText)\r\n      error.response = response\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\nconst ExternalService = new _ExternalService();\r\nexport default ExternalService;","import {\r\n  news as actionType\r\n} from './actionTypes';\r\nimport ExternalService from '../../services/externalServices';\r\n\r\nexport const fetchNews = (sourceID) => async (dispatch) => {\r\n  const news = await ExternalService.getNewsBySource(sourceID);\r\n\r\n  dispatch({\r\n    type: actionType.FETCH_NEWS_BY_SID,\r\n    payload: news\r\n  })\r\n}\r\n\r\nexport const fetchTopHeadlines = (sourceID) => async (dispatch) => {\r\n  const news = await ExternalService.getTopHeadlines(sourceID);\r\n\r\n  dispatch({\r\n    type: actionType.FETCH_TOP_HEADLINES,\r\n    payload: news\r\n  })\r\n}\r\n\r\nexport const fetchSources = () => async (dispatch) => {\r\n  const sources = await ExternalService.getNewsSources();\r\n\r\n  dispatch({\r\n    type: actionType.FETCH_SOURCES,\r\n    payload: sources\r\n  })\r\n}\r\n\r\nexport const fetchRelatedNews = () => async (dispatch, getState) => {\r\n  const news = await ExternalService.getRelatedNews(getState().news.selectedNews[0].content);\r\n\r\n  dispatch({\r\n    type: actionType.FETCH_RELATED_NEWS,\r\n    payload: news\r\n  })\r\n}\r\n\r\nexport const selectedSource = (sourceID, sourceName) => async (dispatch) => {\r\n\r\n  dispatch({\r\n    type: actionType.UPDATE_SELECTED_SOURCE,\r\n    payload: {\r\n      id: sourceID,\r\n      name: sourceName\r\n    }\r\n  })\r\n\r\n  await dispatch(fetchNews(sourceID));\r\n  await dispatch(fetchTopHeadlines(sourceID));\r\n} \r\n\r\nexport const fetchSelectedNews = (title) => async (dispatch, getState) => {\r\n  // const news = await ExternalService.getNewsDetails(title);\r\n\r\n  let news = getState().news.news.filter((data) => {\r\n    return data.title === title;\r\n  })\r\n\r\n  let news_from_headlines = getState().news.topHeadlines.filter((data) => {\r\n    return data.title === title;\r\n  })\r\n\r\n  let related_news = getState().news.relatedNews.filter((data) => {\r\n    return data.title === title;\r\n  });\r\n\r\n  dispatch({\r\n    type: actionType.FETCH_SELECTED_NEWS,\r\n    payload: news.length ? news : (news_from_headlines.length ? news_from_headlines : related_news)\r\n  })\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSources, selectedSource } from '../redux/actions/action';\r\n\r\nimport { Layout, Menu } from 'antd';\r\nconst { Header } = Layout;\r\n\r\nclass AppHeader extends Component {\r\n  reloadAllNews = (sourceID, sourceName) => {\r\n    let { updateSelectedSource } = this.props;\r\n    updateSelectedSource(sourceID, sourceName); \r\n  }\r\n  \r\n  componentDidMount = () => {\r\n    let { loadSources } = this.props;\r\n    loadSources();\r\n  }\r\n\r\n  render() {\r\n    let { allSources } = this.props;\r\n    return (\r\n      <Layout className=\"header-layout\">\r\n        <Header className=\"app-header\">\r\n          <Menu mode=\"horizontal\" defaultSelectedKeys={['-1']}>\r\n            <Menu.Item key=\"-1\" onClick={()=>this.reloadAllNews('all', 'All News')}>All News</Menu.Item>\r\n            {\r\n              allSources.length ? allSources.map((data, index) => (\r\n                <Menu.Item key={index} onClick={()=>this.reloadAllNews(data.id, data.name)}>{data.name}</Menu.Item>\r\n              )):null\r\n            }\r\n          </Menu>\r\n        </Header>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({news}) => ({\r\n  allSources: news.allSources\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadSources: () => dispatch(fetchSources()),\r\n  updateSelectedSource: (sourceID, sourceName) => dispatch(selectedSource(sourceID, sourceName)) \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);","import React, {Component} from 'react';\r\n// antd imports\r\nimport { Row, Col, Typography } from 'antd';\r\nimport { StarOutlined, LikeOutlined } from '@ant-design/icons';\r\nconst { Text } = Typography;\r\n\r\nclass NewsStats extends Component {\r\n  renderDate(date) {\r\n    let DateArray = (new Date(date)).toString().split(' ');\r\n    return `${DateArray[1]} ${DateArray[2]}, ${DateArray[3]},${DateArray[4]}` \r\n  }\r\n  render() {\r\n    let { newsSource, newsDate } = this.props;\r\n    return (\r\n        <Row gutter={12} className=\"news-footer\">\r\n          <Col lg={12}>\r\n            <Typography>\r\n              <Text>\r\n                {newsSource.name}, <span className=\"text-light\">{this.renderDate(newsDate)}</span>\r\n              </Text>\r\n            </Typography>\r\n          </Col>\r\n          <Col lg={12} className=\"news-stats\">\r\n            <span><StarOutlined /> 240</span>\r\n            <span><LikeOutlined /> 20</span>\r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsStats;","import React, {Component} from 'react';\r\nimport NewsStats from './newsStats';\r\nimport { withRouter } from 'react-router-dom';\r\n// antd imports\r\nimport { Card, Row, Col, Typography } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass NewsCard extends Component {\r\n  pageRedirection(path) {\r\n    const { history } = this.props;\r\n    history.push(path);\r\n  }\r\n\r\n  render() {\r\n    let { newsData } = this.props;\r\n    return (\r\n      <>\r\n        <Card className=\"news-card\" onClick={()=>this.pageRedirection(`/news-details/${encodeURI(newsData.title)}`)}>\r\n          <Row gutter={12} className=\"news-content\">\r\n            <Col lg={6} className=\"news-image\">\r\n              <img src={newsData.urlToImage} alt={newsData.urlToImage}/>\r\n            </Col>\r\n            <Col lg={18} className=\"news-text\">\r\n              <Typography>\r\n                <Title level={4} className=\"title-text\">\r\n                  {newsData.title}\r\n                </Title>\r\n                <Paragraph className=\"paragraph-text\">\r\n                  {newsData.description.substring(0,99)}\r\n                </Paragraph>\r\n              </Typography>\r\n            </Col>\r\n          </Row>\r\n          <NewsStats newsSource={newsData.source} newsDate={newsData.publishedAt}/>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(NewsCard);","import React, {Component} from 'react';\r\nimport NewsCard from '../components/newsCard';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nvar shortid = require('shortid');\r\n\r\nclass MainNewsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      currentIndex : 0,\r\n      offset: 10,\r\n    }\r\n  }\r\n\r\n  fetchMoreData = () => {\r\n    let { newsList } = this.props;\r\n\r\n    let { currentIndex, offset } = this.state;\r\n    let finalOffset = currentIndex + offset;\r\n\r\n    for(let i=currentIndex; i<finalOffset; i++) {\r\n      this.setState(prevState => ({\r\n        data: prevState.data.concat([newsList[i]]),\r\n        currentIndex : i+1\r\n      }));\r\n    }\r\n\r\n    console.log(this.state.currentIndex);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMoreData();\r\n  }\r\n\r\n  render() {\r\n    let { data, currentIndex } = this.state;\r\n    return (\r\n      <>\r\n      <InfiniteScroll\r\n      dataLength={this.props.newsList.length}\r\n      next={this.fetchMoreData}\r\n      hasMore={currentIndex < this.props.newsList.length ? true:false}\r\n      loader={<h4>Loading...</h4>}\r\n      endMessage={\r\n        <p style={{textAlign: 'center'}}>\r\n          <b>That's all for now</b>\r\n        </p>\r\n      }\r\n      >\r\n      {\r\n        data.length? data.map((d, index)=>(\r\n          <NewsCard newsData={d} key={shortid.generate()}/>\r\n        )):(\r\n          <>\r\n          <h4>That's all for now</h4>\r\n          </>\r\n        )\r\n      }\r\n      </InfiniteScroll>\r\n      {/* {\r\n        newsList.length? newsList.map((d, index)=>(\r\n          <NewsCard newsData={d} key={shortid.generate()}/>\r\n        )):(\r\n          <>\r\n          <h4>That's all for now</h4>\r\n          </>\r\n        )\r\n      } */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainNewsList;","import React, {Component} from 'react';\r\nimport NewsStats from './newsStats';\r\n// antd imports\r\nimport { Card, Row, Col, Typography } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nconst { Text } = Typography;\r\n\r\nclass NewsPreviewCard extends Component {\r\n\r\n  pageRedirection(path) {\r\n    const { history } = this.props;\r\n    history.push(path);\r\n    window.location.reload();\r\n  }\r\n\r\n  \r\n  render() {\r\n    let { newsData } = this.props;\r\n    return (\r\n      <>\r\n        <Card className=\"news-card\" onClick={()=>this.pageRedirection(`/news-details/${encodeURI(newsData.title)}`)}>\r\n          <Row gutter={12} className=\"news-content\">\r\n            <Col lg={5} className=\"news-image\">\r\n              <img src={newsData.urlToImage} alt={newsData.urlToImage}/>\r\n            </Col>\r\n            <Col lg={19} className=\"news-text\">\r\n              <Typography>\r\n                <Text className=\"paragraph-text text-medium\">\r\n                  {newsData.title}\r\n                </Text>\r\n              </Typography>\r\n            </Col>\r\n          </Row>\r\n          <NewsStats newsSource={newsData.source} newsDate={newsData.publishedAt}/>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(NewsPreviewCard);","import React, {Component} from 'react';\r\nimport NewsPreviewCard from '../components/newsPreviewCard';\r\n\r\nclass TopHeadlines extends Component {\r\n  render() {\r\n    let { newsList } = this.props;\r\n    return (\r\n      <>\r\n       {\r\n        newsList.length? newsList.slice(0,10).map((data, index)=>(\r\n          <NewsPreviewCard newsData={data} key={index} />\r\n        )):(\r\n          <p>\r\n            There were some issues while fetching data\r\n          </p>\r\n        )\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopHeadlines;","import React, {Component} from 'react';\r\nimport MainNewsList from '../containers/mainNewsList';\r\nimport TopHeadlines from '../containers/topHeadlines';\r\nimport { connect } from 'react-redux';\r\nimport { fetchNews, fetchTopHeadlines } from '../redux/actions/action';\r\nimport { Row, Col, Typography, Tag } from 'antd';\r\nconst { Text } = Typography;\r\n  \r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    const { loadNews, selectedSource:{id}, loadTopHeadlines } = this.props;\r\n    loadNews(id);\r\n    loadTopHeadlines(id);\r\n  }\r\n\r\n  render() {\r\n    let { news, topHeadlines, selectedSource:{name} } = this.props;\r\n    return (\r\n      <div className=\"page-container\">\r\n        <Row>\r\n          {/* main content */}\r\n          <Col lg={16} className=\"main-content\">\r\n            <Typography className=\"breadcrumb-section\">\r\n              <Text className=\"text-medium tag-bar\">\r\n                <div>Latest updates from <span className=\"text-active\">{name}</span></div>\r\n                <div className=\"pull-right \">\r\n                  <Tag color=\"processing\">Business</Tag> \r\n                  <Tag color=\"processing\">Economics</Tag>\r\n                  <Tag color=\"processing\">Health</Tag>\r\n                  <Tag color=\"processing\">Weather</Tag>\r\n                  <Tag color=\"processing\">Entertainment</Tag>\r\n                  <Tag color=\"processing\">Sports</Tag>\r\n                </div>\r\n              </Text>\r\n            </Typography>\r\n            <MainNewsList newsList={news}/>\r\n          </Col>\r\n          {/* side content */}\r\n          <Col lg={8} className=\"side-bar\">\r\n            <Typography className=\"breadcrumb-section\">\r\n              <Text className=\"text-medium\">\r\n                Top Headlines\r\n              </Text>\r\n            </Typography>\r\n            <div className=\"scrollable\">\r\n              <TopHeadlines newsList={topHeadlines}/>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({news}) => ({\r\n    news: news.news,\r\n    topHeadlines: news.topHeadlines,\r\n    selectedSource: {\r\n      id: news.selectedSource.id,\r\n      name: news.selectedSource.name\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadNews: (source) => dispatch(fetchNews(source)),\r\n  loadTopHeadlines: (source) => dispatch(fetchTopHeadlines(source))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, {Component} from 'react';\r\nimport NewsStats from '../components/newsStats';\r\nimport { Row, Col, Typography, Breadcrumb } from 'antd';\r\n// import Paragraph from 'antd/lib/skeleton/Paragraph';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass NewsDetailContainer extends Component {\r\n  render() {\r\n    let { newsData } = this.props;\r\n    return (\r\n      <>\r\n        {\r\n          newsData?(\r\n            <Row>\r\n              <Col lg={24} className=\"breadcrumb-section\">\r\n                <Breadcrumb separator=\">\">\r\n                  <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n                  <Breadcrumb.Item>{newsData.title.substring(0,50)}...</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Col>\r\n              <Col lg={24} className=\"news-lg-image-container\">\r\n                <img src={newsData.urlToImage} alt={newsData.urlToImage}/>\r\n              </Col>\r\n              <Col lg={24}>\r\n                <Typography>\r\n                    <Title level={4} className=\"title-text\">\r\n                      {newsData.title}\r\n                    </Title>\r\n                </Typography>\r\n                <NewsStats newsSource={newsData.source} newsDate={newsData.publishedAt}/>\r\n              </Col>\r\n              <Col lg={24}>\r\n                <Typography>\r\n                    <Paragraph>\r\n                      {newsData.content}\r\n                    </Paragraph>\r\n                </Typography>\r\n              </Col>\r\n            </Row>\r\n          ):(\r\n            <Row>\r\n              <Col lg={24} className=\"news-lg-image-container\">\r\n                <p>\r\n                  There were some issues while fetching data\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          )\r\n        }\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewsDetailContainer;","import React, {Component} from 'react';\r\nimport NewsPreviewCard from '../components/newsPreviewCard';\r\n\r\nclass RelatedNews extends Component {\r\n  render() {\r\n    let { newsList } = this.props;\r\n    return (\r\n      <>\r\n       {\r\n        newsList.length? newsList.slice(0,10).map((data, index)=>(\r\n          <NewsPreviewCard newsData={data} key={index} />\r\n        )):(\r\n          <p>\r\n            There were some issues while fetching data\r\n          </p>\r\n        )\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RelatedNews;","import React, {Component} from 'react';\r\nimport NewsDetailContainer from '../containers/newsDetailsContainer';\r\nimport RelatedNews from '../containers/similarNews';\r\nimport { fetchSelectedNews, fetchRelatedNews } from '../redux/actions/action';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Row, Col, Typography } from 'antd';\r\nconst { Text  } = Typography;\r\n  \r\nclass NewsDetails extends Component {\r\n\r\n  getCurrentURL = () => {\r\n    let newsTitle = decodeURIComponent(window.location.pathname).replace(\"/news-details/\",\"\");\r\n    return newsTitle;\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.props);\r\n    const { loadSelectedNews, loadRelatedNews } = this.props;\r\n    loadSelectedNews(this.getCurrentURL());\r\n    loadRelatedNews();\r\n  }\r\n\r\n  render() {\r\n    let { selectedNews, relatedNews } = this.props;\r\n    return (\r\n      <div className=\"page-container\">\r\n        <Row>\r\n          {/* main content */}\r\n          <Col lg={16} className=\"main-content\">\r\n            <NewsDetailContainer newsData={selectedNews[0]}/>\r\n          </Col>\r\n          {/* side content */}\r\n          <Col lg={8} className=\"side-bar\">\r\n            <Typography className=\"breadcrumb-section\">\r\n              <Text className=\"text-medium\">\r\n                Realted News\r\n              </Text>\r\n            </Typography>\r\n            <div className=\"scrollable\">\r\n              <RelatedNews newsList={relatedNews}/>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({news}) => ({\r\n    selectedSource: news.selectedSource,\r\n    selectedNews: news.selectedNews,\r\n    relatedNews: news.relatedNews\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadSelectedNews: (title) => dispatch(fetchSelectedNews(title)),\r\n  loadRelatedNews: () => dispatch(fetchRelatedNews())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsDetails);","import React, {Component} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from '../pages/home';\r\nimport NewsDetails from '../pages/newsDetails';\r\n\r\nexport default class PageContent extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/news-details/:newsTitle\" component={NewsDetails} />\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport AppHeader from './header';\r\nimport PageContent from './pageContent';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router>\r\n          <AppHeader />\r\n          <PageContent />\r\n        </Router>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import { news as actionType } from '../actions/actionTypes';\r\n\r\nconst InitialState = {\r\n  allSources: [],\r\n  selectedSource: {\r\n    id: 'all',\r\n    name: 'All News'\r\n  },\r\n  news: [],\r\n  selectedNews : {},\r\n  topHeadlines: [],\r\n  relatedNews: []\r\n}\r\n\r\nexport default (state = InitialState, {type, payload}) => {\r\n\r\n  // fetch news\r\n  switch (type) {\r\n    case actionType.FETCH_NEWS_BY_SID: {\r\n      return {\r\n        ...state,\r\n        news: payload\r\n      }\r\n    }\r\n\r\n    case actionType.FETCH_TOP_HEADLINES:\r\n      return {\r\n        ...state,\r\n        topHeadlines: payload\r\n      }\r\n\r\n    case actionType.FETCH_RELATED_NEWS:\r\n      return {\r\n        ...state,\r\n        relatedNews: payload\r\n      }\r\n\r\n    case actionType.FETCH_SELECTED_NEWS:{\r\n      return {\r\n        ...state,\r\n        selectedNews: payload\r\n      }\r\n    }\r\n\r\n    case actionType.FETCH_SOURCES : {\r\n      return {\r\n        ...state,\r\n        allSources: payload\r\n      }\r\n    }\r\n\r\n    case actionType.UPDATE_SELECTED_SOURCE : {\r\n      return {\r\n        ...state,\r\n        selectedSource: {\r\n          id: payload.id,\r\n          name: payload.name\r\n        }\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport news from './news';\r\n\r\nconst rootReducer = combineReducers({\r\n  news\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/app';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport persistState from 'redux-sessionstorage';\n\nconst middleware = [\n  thunk\n];\n\nconst composeEnhancers =\n    (process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION__) ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n        compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n  persistState(['news']),\n  applyMiddleware(...middleware)\n));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}